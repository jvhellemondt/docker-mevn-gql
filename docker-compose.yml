version: "3.8"

services:
  #
  # [ server stack ]
  #
  # - VueJs
  # - Express/NodeJs/GraphQL
  # - MongoDb
  #
  api:
    build: ./api
    container_name: nodejs
    restart: unless-stopped
    environment:
      - PORT=4000
      - NODE_ENV=production
      - IS_NODE=true
      - MONGODB_URL=admin:secret@mongodb:27017/?compressors=zlib&gssapiServiceName=mongodb
      - JWT_SECRET=3f1d9f7c8b9eebcea072a9f4c33c1d8b0469af43c2ebdc06f6695180d5b013fc
    ports:
      - 4000:4000
    networks:
      - webappnetwork
    depends_on:
      - mongodb-server
    volumes:
      - backend:/app/

  client:
    build: ./client
    container_name: vuejs
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
    volumes:
      - frontend:/data
      - frontend:/config
    networks:
      - webappnetwork
    depends_on:
      - api

  mongodb-server:
    image: mongo:latest
    container_name: mongodb
    restart: unless-stopped
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: secret
    volumes:
      - mongodb:/data/configdb
      - mongodb:/data/db
    networks:
      - webappnetwork

#
# [ volumes definition ]
#
# creates Docker volumes which can be mounted by other containers too e.g. for backup
# default should be local
#
volumes:
  mongodb:
  frontend:
  backend:

#
# [ networks definition ]
# default should be bridge
#
networks:
  webappnetwork:
